package simulator.view;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import simulator.control.Controler;
import simulator.model.Animal.Diet;
import simulator.model.AnimalInfo;
import simulator.model.EcoSysObserver;
import simulator.model.MapInfo;
import simulator.model.MapInfo.RegionData;
import simulator.model.RegionInfo;

public class MasDeTresCarnivoros implements EcoSysObserver {
	private Controler _ctrl;
	private Map<RegionData,Integer> _mapa;
	
	public MasDeTresCarnivoros(Controler ctrl) {
		
		_mapa=new HashMap<>();
		
		 _ctrl=ctrl;
		 _ctrl.addObserver(this);
	}

	@Override
	public void onRegister(double time, MapInfo map, List<AnimalInfo> animals) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onReset(double time, MapInfo map, List<AnimalInfo> animals) {
		// TODO Auto-generated method stub
		_mapa.clear();
	}

	@Override
	public void onAnimalAdded(double time, MapInfo map, List<AnimalInfo> animals, AnimalInfo a) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onRegionSet(int row, int col, MapInfo map, RegionInfo r) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onAvanced(double time, MapInfo map, List<AnimalInfo> animals, double dt) {
		// TODO Auto-generated method stub
		
		Iterator <RegionData> it=map.iterator();
		RegionData regionData;
		
		while(it.hasNext()) {
			
			Integer pasosCarnivoros=0;
			regionData=it.next();
			
			if(regionData.r().getAnimalsInfo().stream().filter((a)->a.get_diet()==Diet.CARNIVORE).count()>3) {
				
				if(_mapa.containsKey(regionData)) {
					 pasosCarnivoros=_mapa.get(regionData)+1;
					 _mapa.put(regionData,pasosCarnivoros);
				}else {
					pasosCarnivoros=1;
					 _mapa.put(regionData,pasosCarnivoros);
				}	
				
			}
			
		}
	}
	
	public void Imprimir() {
			for(RegionData r:_mapa.keySet()) {
		System.out.println("La region: "+r.row()+" "+r.col()+ "ha contenido mas de tres carnivoros en"+_mapa.get(r)+" pasos");
		
		}
		
	}

}
